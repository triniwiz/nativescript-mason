#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.9.2 (swiftlang-5.9.2.2.56 clang-1500.1.0.2.5)
#ifndef MASON_SWIFT_H
#define MASON_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#import <Mason/Mason.h>

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="Mason",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
typedef SWIFT_ENUM_NAMED(NSInteger, AlignContent, "AlignContent", open) {
  AlignContentNormal = -1,
  AlignContentStart = 0,
  AlignContentEnd = 1,
  AlignContentCenter = 2,
  AlignContentStretch = 3,
  AlignContentSpaceBetween = 4,
  AlignContentSpaceAround = 5,
  AlignContentSpaceEvenly = 6,
  AlignContentFlexStart = 7,
  AlignContentFlexEnd = 8,
};

typedef SWIFT_ENUM_NAMED(NSInteger, AlignItems, "AlignItems", open) {
  AlignItemsNormal = -1,
  AlignItemsStart = 0,
  AlignItemsEnd = 1,
  AlignItemsCenter = 2,
  AlignItemsBaseline = 3,
  AlignItemsStretch = 4,
  AlignItemsFlexStart = 5,
  AlignItemsFlexEnd = 6,
};

typedef SWIFT_ENUM_NAMED(NSInteger, AlignSelf, "AlignSelf", open) {
  AlignSelfNormal = -1,
  AlignSelfStart = 0,
  AlignSelfEnd = 1,
  AlignSelfCenter = 2,
  AlignSelfBaseline = 3,
  AlignSelfStretch = 4,
  AlignSelfFlexStart = 5,
  AlignSelfFlexEnd = 6,
};

typedef SWIFT_ENUM_NAMED(NSInteger, Direction, "Direction", open) {
  DirectionInherit = 0,
  DirectionLTR = 1,
  DirectionRTL = 2,
};

typedef SWIFT_ENUM_NAMED(NSInteger, Display, "Display", open) {
  DisplayNone = 0,
  DisplayFlex = 1,
  DisplayGrid = 2,
  DisplayBlock = 3,
};

typedef SWIFT_ENUM_NAMED(NSInteger, FlexDirection, "FlexDirection", open) {
  FlexDirectionRow = 0,
  FlexDirectionColumn = 1,
  FlexDirectionRowReverse = 2,
  FlexDirectionColumnReverse = 3,
};

typedef SWIFT_ENUM_NAMED(NSInteger, FlexWrap, "FlexWrap", open) {
  FlexWrapNoWrap = 0,
  FlexWrapWrap = 1,
  FlexWrapWrapReverse = 2,
};

typedef SWIFT_ENUM_NAMED(NSInteger, FlexGridAutoFlowWrap, "GridAutoFlow", open) {
  FlexGridAutoFlowWrapRow = 0,
  FlexGridAutoFlowWrapColumn = 1,
  FlexGridAutoFlowWrapRowDense = 2,
  FlexGridAutoFlowWrapColumnDense = 3,
};

enum GridPlacementCompatType : NSInteger;
@class NSString;

SWIFT_CLASS_NAMED("GridPlacementCompat")
@interface GridPlacementCompat : NSObject
- (nonnull instancetype)initWithSpan:(int16_t)span OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLine:(int16_t)line OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly) enum GridPlacementCompatType type;
@property (nonatomic, readonly) int16_t value;
@property (nonatomic, readonly, copy) NSString * _Nonnull cssValue;
@property (nonatomic, readonly, copy) NSString * _Nullable jsonValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) GridPlacementCompat * _Nonnull Auto;)
+ (GridPlacementCompat * _Nonnull)Auto SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(NSInteger, GridPlacementCompatType, "GridPlacementCompatType", open) {
  GridPlacementCompatTypeAuto = 0,
  GridPlacementCompatTypeLine = 1,
  GridPlacementCompatTypeSpan = 2,
};


SWIFT_CLASS_NAMED("GridTrackRepetition")
@interface GridTrackRepetition : NSObject
@property (nonatomic, readonly) int32_t type;
@property (nonatomic, readonly) uint16_t value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) GridTrackRepetition * _Nonnull AutoFill;)
+ (GridTrackRepetition * _Nonnull)AutoFill SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) GridTrackRepetition * _Nonnull AutoFit;)
+ (GridTrackRepetition * _Nonnull)AutoFit SWIFT_WARN_UNUSED_RESULT;
+ (GridTrackRepetition * _Nonnull)Count:(uint16_t)value SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(NSInteger, JustifyContent, "JustifyContent", open) {
  JustifyContentNormal = -1,
  JustifyContentStart = 0,
  JustifyContentEnd = 1,
  JustifyContentCenter = 2,
  JustifyContentStretch = 3,
  JustifyContentSpaceBetween = 4,
  JustifyContentSpaceAround = 5,
  JustifyContentSpaceEvenly = 6,
  JustifyContentFlexStart = 7,
  JustifyContentFlexEnd = 8,
};

typedef SWIFT_ENUM_NAMED(NSInteger, JustifyItems, "JustifyItems", open) {
  JustifyItemsNormal = -1,
  JustifyItemsStart = 0,
  JustifyItemsEnd = 1,
  JustifyItemsCenter = 2,
  JustifyItemsBaseline = 3,
  JustifyItemsStretch = 4,
  JustifyItemsFlexStart = 5,
  JustifyItemsFlexEnd = 6,
};

typedef SWIFT_ENUM_NAMED(NSInteger, JustifySelf, "JustifySelf", open) {
  JustifySelfNormal = -1,
  JustifySelfStart = 0,
  JustifySelfEnd = 1,
  JustifySelfCenter = 2,
  JustifySelfBaseline = 3,
  JustifySelfStretch = 4,
  JustifySelfFlexStart = 5,
  JustifySelfFlexEnd = 6,
};


SWIFT_CLASS_NAMED("LineGridPlacementCompat")
@interface LineGridPlacementCompat : NSObject
@property (nonatomic, readonly, strong) GridPlacementCompat * _Nonnull start;
@property (nonatomic, readonly, strong) GridPlacementCompat * _Nonnull end;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum MasonDimensionCompatType : NSInteger;

SWIFT_CLASS_NAMED("MasonDimensionCompat")
@interface MasonDimensionCompat : NSObject
- (nonnull instancetype)initWithPoints:(float)points OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithPercent:(float)percent OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly) enum MasonDimensionCompatType type;
@property (nonatomic, readonly) float value;
@property (nonatomic, readonly, copy) NSString * _Nonnull cssValue;
@property (nonatomic, readonly, copy) NSString * _Nullable jsonValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MasonDimensionCompat * _Nonnull Auto;)
+ (MasonDimensionCompat * _Nonnull)Auto SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MasonDimensionCompat * _Nonnull Zero;)
+ (MasonDimensionCompat * _Nonnull)Zero SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(NSInteger, MasonDimensionCompatType, "MasonDimensionCompatType", open) {
  MasonDimensionCompatTypeAuto = 0,
  MasonDimensionCompatTypePoints = 1,
  MasonDimensionCompatTypePercent = 2,
};


SWIFT_CLASS_NAMED("MasonDimensionRectCompat")
@interface MasonDimensionRectCompat : NSObject
@property (nonatomic, strong) MasonDimensionCompat * _Nonnull left;
@property (nonatomic, strong) MasonDimensionCompat * _Nonnull right;
@property (nonatomic, strong) MasonDimensionCompat * _Nonnull top;
@property (nonatomic, strong) MasonDimensionCompat * _Nonnull bottom;
- (nonnull instancetype)init:(MasonDimensionCompat * _Nonnull)left :(MasonDimensionCompat * _Nonnull)right :(MasonDimensionCompat * _Nonnull)top :(MasonDimensionCompat * _Nonnull)bottom OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("MasonDimensionSizeCompat")
@interface MasonDimensionSizeCompat : NSObject
@property (nonatomic, strong) MasonDimensionCompat * _Nonnull width;
@property (nonatomic, strong) MasonDimensionCompat * _Nonnull height;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("MasonLayout")
@interface MasonLayout : NSObject
@property (nonatomic, readonly) NSInteger order;
@property (nonatomic, readonly) float x;
@property (nonatomic, readonly) float y;
@property (nonatomic, readonly) float width;
@property (nonatomic, readonly) float height;
@property (nonatomic, readonly, copy) NSArray<MasonLayout *> * _Nonnull children;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum MasonLengthPercentageAutoCompatType : NSInteger;

SWIFT_CLASS_NAMED("MasonLengthPercentageAutoCompat")
@interface MasonLengthPercentageAutoCompat : NSObject
- (nonnull instancetype)initWithPoints:(float)points OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithPercent:(float)percent OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly) enum MasonLengthPercentageAutoCompatType type;
@property (nonatomic, readonly) float value;
@property (nonatomic, readonly, copy) NSString * _Nonnull cssValue;
@property (nonatomic, readonly, copy) NSString * _Nullable jsonValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MasonLengthPercentageAutoCompat * _Nonnull Auto;)
+ (MasonLengthPercentageAutoCompat * _Nonnull)Auto SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MasonLengthPercentageAutoCompat * _Nonnull Zero;)
+ (MasonLengthPercentageAutoCompat * _Nonnull)Zero SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(NSInteger, MasonLengthPercentageAutoCompatType, "MasonLengthPercentageAutoCompatType", open) {
  MasonLengthPercentageAutoCompatTypeAuto = 0,
  MasonLengthPercentageAutoCompatTypePoints = 1,
  MasonLengthPercentageAutoCompatTypePercent = 2,
};


SWIFT_CLASS_NAMED("MasonLengthPercentageAutoRectCompat")
@interface MasonLengthPercentageAutoRectCompat : NSObject
@property (nonatomic, strong) MasonLengthPercentageAutoCompat * _Nonnull left;
@property (nonatomic, strong) MasonLengthPercentageAutoCompat * _Nonnull right;
@property (nonatomic, strong) MasonLengthPercentageAutoCompat * _Nonnull top;
@property (nonatomic, strong) MasonLengthPercentageAutoCompat * _Nonnull bottom;
- (nonnull instancetype)init:(MasonLengthPercentageAutoCompat * _Nonnull)left :(MasonLengthPercentageAutoCompat * _Nonnull)right :(MasonLengthPercentageAutoCompat * _Nonnull)top :(MasonLengthPercentageAutoCompat * _Nonnull)bottom OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("MasonLengthPercentageAutoSizeCompat")
@interface MasonLengthPercentageAutoSizeCompat : NSObject
@property (nonatomic, strong) MasonLengthPercentageAutoCompat * _Nonnull width;
@property (nonatomic, strong) MasonLengthPercentageAutoCompat * _Nonnull height;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum MasonLengthPercentageCompatType : NSInteger;

SWIFT_CLASS_NAMED("MasonLengthPercentageCompat")
@interface MasonLengthPercentageCompat : NSObject
- (nonnull instancetype)initWithPoints:(float)points OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithPercent:(float)percent OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly) enum MasonLengthPercentageCompatType type;
@property (nonatomic, readonly) float value;
@property (nonatomic, readonly, copy) NSString * _Nonnull cssValue;
@property (nonatomic, readonly, copy) NSString * _Nullable jsonValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MasonLengthPercentageCompat * _Nonnull Zero;)
+ (MasonLengthPercentageCompat * _Nonnull)Zero SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(NSInteger, MasonLengthPercentageCompatType, "MasonLengthPercentageCompatType", open) {
  MasonLengthPercentageCompatTypePoints = 0,
  MasonLengthPercentageCompatTypePercent = 1,
};


SWIFT_CLASS_NAMED("MasonLengthPercentageRectCompat")
@interface MasonLengthPercentageRectCompat : NSObject
@property (nonatomic, strong) MasonLengthPercentageCompat * _Nonnull left;
@property (nonatomic, strong) MasonLengthPercentageCompat * _Nonnull right;
@property (nonatomic, strong) MasonLengthPercentageCompat * _Nonnull top;
@property (nonatomic, strong) MasonLengthPercentageCompat * _Nonnull bottom;
- (nonnull instancetype)init:(MasonLengthPercentageCompat * _Nonnull)left :(MasonLengthPercentageCompat * _Nonnull)right :(MasonLengthPercentageCompat * _Nonnull)top :(MasonLengthPercentageCompat * _Nonnull)bottom OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("MasonLengthPercentageSizeCompat")
@interface MasonLengthPercentageSizeCompat : NSObject
@property (nonatomic, strong) MasonLengthPercentageCompat * _Nonnull width;
@property (nonatomic, strong) MasonLengthPercentageCompat * _Nonnull height;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class MasonStyle;

SWIFT_CLASS_NAMED("MasonNode")
@interface MasonNode : NSObject
@property (nonatomic, readonly) void * _Nullable nativePtr;
@property (nonatomic, strong) MasonStyle * _Nonnull style;
@property (nonatomic) BOOL includeInLayout;
@property (nonatomic) BOOL isEnabled;
@property (nonatomic, strong) id _Nullable data;
@property (nonatomic, readonly, strong) MasonNode * _Nullable owner;
@property (nonatomic, readonly, copy) NSArray<MasonNode *> * _Nonnull children;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithStyle:(MasonStyle * _Nonnull)style OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithStyle:(MasonStyle * _Nonnull)style children:(NSArray<MasonNode *> * _Nonnull)children OBJC_DESIGNATED_INITIALIZER;
- (void)updateNodeStyle;
- (MasonLayout * _Nonnull)layout;
@property (nonatomic, readonly) BOOL isDirty;
- (void)markDirty;
- (MasonNode * _Nullable)getRoot SWIFT_WARN_UNUSED_RESULT;
- (void)rootCompute;
- (void)rootCompute:(float)width :(float)height;
- (void)rootComputeMaxContent;
- (void)rootComputeMinContent;
- (void)rootComputeWithViewSize;
- (void)rootComputeWithViewSizeWithLayout:(BOOL)layout;
- (void)rootComputeWithMaxContent;
- (void)compute;
- (void)compute:(float)width :(float)height;
- (void)computeMaxContent;
- (void)computeMinContent;
- (void)computeWithSize:(float)width :(float)height;
- (void)computeWithViewSize;
- (void)computeWithViewSizeWithLayout:(BOOL)layout;
- (void)computeWithMaxContent;
- (void)computeWithMinContent;
- (void)attachAndApply;
- (void)setChildrenWithChildren:(NSArray<MasonNode *> * _Nonnull)children;
- (void)addChildren:(NSArray<MasonNode *> * _Nonnull)children;
@property (nonatomic, readonly) BOOL isLeaf;
- (void)configure:(SWIFT_NOESCAPE void (^ _Nonnull)(MasonNode * _Nonnull))block;
@end


SWIFT_CLASS_NAMED("MasonReexports")
@interface MasonReexports : NSObject
+ (void)node_set_style:(void * _Nullable)mason :(void * _Nullable)node :(void * _Nullable)style;
+ (void)node_compute:(void * _Nullable)mason :(void * _Nullable)node;
+ (void)node_compute_wh:(void * _Nullable)mason :(void * _Nullable)node width:(float)width height:(float)height;
+ (void)node_compute_max_content:(void * _Nullable)mason :(void * _Nullable)node;
+ (void)node_compute_min_content:(void * _Nullable)mason :(void * _Nullable)node;
+ (BOOL)node_dirty:(void * _Nullable)mason :(void * _Nullable)node SWIFT_WARN_UNUSED_RESULT;
+ (void)node_mark_dirty:(void * _Nullable)mason :(void * _Nullable)node;
+ (int32_t)style_get_display:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_display:(void * _Nullable)style :(int32_t)display;
+ (int32_t)style_get_position:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_position:(void * _Nullable)style :(int32_t)position;
+ (int32_t)style_get_direction:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_direction:(void * _Nullable)style :(int32_t)direction;
+ (int32_t)style_get_flex_direction:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_flex_direction:(void * _Nullable)style :(int32_t)flex_direction;
+ (int32_t)style_get_flex_wrap:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_flex_wrap:(void * _Nullable)style :(int32_t)flex_wrap;
+ (void)style_set_overflow:(void * _Nullable)style :(int32_t)overflow;
+ (void)style_set_overflow_x:(void * _Nullable)style :(int32_t)overflow;
+ (void)style_set_overflow_y:(void * _Nullable)style :(int32_t)overflow;
+ (int32_t)style_get_overflow_x:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (int32_t)style_get_overflow_y:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (int32_t)style_get_align_items:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_align_items:(void * _Nullable)style :(int32_t)align_items;
+ (int32_t)style_get_align_self:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_align_self:(void * _Nullable)style :(int32_t)align_self;
+ (int32_t)style_get_align_content:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_align_content:(void * _Nullable)style :(int32_t)align_content;
+ (int32_t)style_get_justify_items:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_justify_items:(void * _Nullable)style :(int32_t)align_items;
+ (int32_t)style_get_justify_self:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_justify_self:(void * _Nullable)style :(int32_t)align_self;
+ (int32_t)style_get_justify_content:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_justify_content:(void * _Nullable)style :(int32_t)justify_content;
+ (void)style_set_inset:(void * _Nullable)style :(float)value :(CMasonLengthPercentageAutoType)value_type;
+ (CMasonLengthPercentageAuto)style_get_inset_left:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_inset_left:(void * _Nullable)style :(float)value :(CMasonLengthPercentageAutoType)value_type;
+ (CMasonLengthPercentageAuto)style_get_inset_right:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_inset_right:(void * _Nullable)style :(float)value :(CMasonLengthPercentageAutoType)value_type;
+ (CMasonLengthPercentageAuto)style_get_inset_top:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_inset_top:(void * _Nullable)style :(float)value :(CMasonLengthPercentageAutoType)value_type;
+ (CMasonLengthPercentageAuto)style_get_inset_bottom:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_inset_bottom:(void * _Nullable)style :(float)value :(CMasonLengthPercentageAutoType)value_type;
+ (void)style_set_margin:(void * _Nullable)style :(float)value :(CMasonLengthPercentageAutoType)value_type;
+ (CMasonLengthPercentageAuto)style_get_margin_left:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_margin_left:(void * _Nullable)style :(float)value :(CMasonLengthPercentageAutoType)value_type;
+ (CMasonLengthPercentageAuto)style_get_margin_right:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_margin_right:(void * _Nullable)style :(float)value :(CMasonLengthPercentageAutoType)value_type;
+ (CMasonLengthPercentageAuto)style_get_margin_top:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_margin_top:(void * _Nullable)style :(float)value :(CMasonLengthPercentageAutoType)value_type;
+ (CMasonLengthPercentageAuto)style_get_margin_bottom:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_margin_bottom:(void * _Nullable)style :(float)value :(CMasonLengthPercentageAutoType)value_type;
+ (void)style_set_padding:(void * _Nullable)style :(float)value :(CMasonLengthPercentageType)value_type;
+ (CMasonLengthPercentage)style_get_padding_left:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_padding_left:(void * _Nullable)style :(float)value :(CMasonLengthPercentageType)value_type;
+ (CMasonLengthPercentage)style_get_padding_right:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_padding_right:(void * _Nullable)style :(float)value :(CMasonLengthPercentageType)value_type;
+ (CMasonLengthPercentage)style_get_padding_top:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_padding_top:(void * _Nullable)style :(float)value :(CMasonLengthPercentageType)value_type;
+ (CMasonLengthPercentage)style_get_padding_bottom:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_padding_bottom:(void * _Nullable)style :(float)value :(CMasonLengthPercentageType)value_type;
+ (void)style_set_border:(void * _Nullable)style :(float)value :(CMasonLengthPercentageType)value_type;
+ (CMasonLengthPercentage)style_get_border_left:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_border_left:(void * _Nullable)style :(float)value :(CMasonLengthPercentageType)value_type;
+ (CMasonLengthPercentage)style_get_border_right:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_border_right:(void * _Nullable)style :(float)value :(CMasonLengthPercentageType)value_type;
+ (CMasonLengthPercentage)style_get_border_top:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_border_top:(void * _Nullable)style :(float)value :(CMasonLengthPercentageType)value_type;
+ (CMasonLengthPercentage)style_get_border_bottom:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_border_bottom:(void * _Nullable)style :(float)value :(CMasonLengthPercentageType)value_type;
+ (float)style_get_flex_grow:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_flex_grow:(void * _Nullable)style :(float)value;
+ (void)style_set_border_bottom:(void * _Nullable)style :(float)value;
+ (float)style_get_flex_shrink:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_flex_shrink:(void * _Nullable)style :(float)value;
+ (void)style_set_flex_basis:(void * _Nullable)style :(float)value :(CMasonDimensionType)value_type;
+ (CMasonDimension)style_get_flex_basis:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_scrollbar_width:(void * _Nullable)style :(float)value;
+ (float)style_get_scrollbar_width:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (CMasonDimension)style_get_width:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_width:(void * _Nullable)style :(float)value :(CMasonDimensionType)value_type;
+ (CMasonDimension)style_get_height:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_height:(void * _Nullable)style :(float)value :(CMasonDimensionType)value_type;
+ (CMasonDimension)style_get_min_width:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_min_width:(void * _Nullable)style :(float)value :(CMasonDimensionType)value_type;
+ (CMasonDimension)style_get_min_height:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_min_height:(void * _Nullable)style :(float)value :(CMasonDimensionType)value_type;
+ (CMasonDimension)style_get_max_width:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_max_width:(void * _Nullable)style :(float)value :(CMasonDimensionType)value_type;
+ (CMasonDimension)style_get_max_height:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_max_height:(void * _Nullable)style :(float)value :(CMasonDimensionType)value_type;
+ (CMasonLengthPercentageSize)style_get_gap:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_gap:(void * _Nullable)style :(float)width_value :(CMasonLengthPercentageType)width_type :(float)height_value :(CMasonLengthPercentageType)height_type;
+ (CMasonLengthPercentage)style_get_row_gap:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_row_gap:(void * _Nullable)style :(float)value :(CMasonLengthPercentageType)value_type;
+ (CMasonLengthPercentage)style_get_column_gap:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_column_gap:(void * _Nullable)style :(float)value :(CMasonLengthPercentageType)value_type;
+ (float)style_get_aspect_ratio:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_aspect_ratio:(void * _Nullable)style :(float)value;
+ (CMasonNonRepeatedTrackSizingFunctionArray * _Nonnull)style_get_grid_auto_rows:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_grid_auto_rows:(void * _Nullable)style :(CMasonNonRepeatedTrackSizingFunctionArray * _Nonnull)value;
+ (CMasonNonRepeatedTrackSizingFunctionArray * _Nonnull)style_get_grid_auto_columns:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_grid_auto_columns:(void * _Nullable)style :(CMasonNonRepeatedTrackSizingFunctionArray * _Nonnull)value;
+ (int32_t)style_get_grid_auto_flow:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_grid_auto_flow:(void * _Nullable)style :(int32_t)value;
+ (void)style_set_grid_area:(void * _Nullable)style :(CMasonGridPlacement)row_start :(CMasonGridPlacement)row_end :(CMasonGridPlacement)column_start :(CMasonGridPlacement)column_end;
+ (void)style_set_grid_column:(void * _Nullable)style :(CMasonGridPlacement)start :(CMasonGridPlacement)end;
+ (CMasonGridPlacement)style_get_grid_column_start:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_grid_column_start:(void * _Nullable)style :(CMasonGridPlacement)value;
+ (CMasonGridPlacement)style_get_grid_column_end:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_grid_column_end:(void * _Nullable)style :(CMasonGridPlacement)value;
+ (void)style_set_grid_row:(void * _Nullable)style :(CMasonGridPlacement)start :(CMasonGridPlacement)end;
+ (CMasonGridPlacement)style_get_grid_row_start:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_grid_row_start:(void * _Nullable)style :(CMasonGridPlacement)value;
+ (CMasonGridPlacement)style_get_grid_row_end:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_grid_row_end:(void * _Nullable)style :(CMasonGridPlacement)value;
+ (CMasonTrackSizingFunctionArray * _Nonnull)style_get_grid_template_rows:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_grid_template_rows:(void * _Nullable)style :(CMasonTrackSizingFunctionArray * _Nonnull)value;
+ (CMasonTrackSizingFunctionArray * _Nonnull)style_get_grid_template_columns:(void * _Nullable)style SWIFT_WARN_UNUSED_RESULT;
+ (void)style_set_grid_template_columns:(void * _Nullable)style :(CMasonTrackSizingFunctionArray * _Nonnull)value;
+ (void)destroyWithNonRepeatedTrackSizingFunctionArray:(CMasonNonRepeatedTrackSizingFunctionArray * _Nonnull)nonRepeatedTrackSizingFunctionArray;
+ (void)destroyWithTrackSizingFunctionArray:(CMasonTrackSizingFunctionArray * _Nonnull)trackSizingFunctionArray;
+ (NSString * _Nonnull)util_parse_non_repeated_track_sizing_function:(CMasonNonRepeatedTrackSizingFunctionArray * _Nonnull)value SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)util_parse_auto_repeating_track_sizing_function:(CMasonTrackSizingFunctionArray * _Nonnull)value SWIFT_WARN_UNUSED_RESULT;
+ (CMasonMinMax)util_create_non_repeated_track_sizing_function_with_type_value:(int32_t)track_type :(float)track_value SWIFT_WARN_UNUSED_RESULT;
+ (void)style_update_with_values:(void * _Nullable)style :(int32_t)display :(int32_t)position :(int32_t)direction :(int32_t)flexDirection :(int32_t)flexWrap :(int32_t)overflow :(int32_t)alignItems :(int32_t)alignSelf :(int32_t)alignContent :(int32_t)justifyItems :(int32_t)justifySelf :(int32_t)justifyContent :(int32_t)insetLeftType :(float)insetLeftValue :(int32_t)insetRightType :(float)insetRightValue :(int32_t)insetTopType :(float)insetTopValue :(int32_t)insetBottomType :(float)insetBottomValue :(int32_t)marginLeftType :(float)marginLeftValue :(int32_t)marginRightType :(float)marginRightValue :(int32_t)marginTopType :(float)marginTopValue :(int32_t)marginBottomType :(float)marginBottomValue :(int32_t)paddingLeftType :(float)paddingLeftValue :(int32_t)paddingRightType :(float)paddingRightValue :(int32_t)paddingTopType :(float)paddingTopValue :(int32_t)paddingBottomType :(float)paddingBottomValue :(int32_t)borderLeftType :(float)borderLeftValue :(int32_t)borderRightType :(float)borderRightValue :(int32_t)borderTopType :(float)borderTopValue :(int32_t)borderBottomType :(float)borderBottomValue :(float)flexGrow :(float)flexShrink :(int32_t)flexBasisType :(float)flexBasisValue :(int32_t)widthType :(float)widthValue :(int32_t)heightType :(float)heightValue :(int32_t)minWidthType :(float)minWidthValue :(int32_t)minHeightType :(float)minHeightValue :(int32_t)maxWidthType :(float)maxWidthValue :(int32_t)maxHeightType :(float)maxHeightValue :(int32_t)gapRowType :(float)gapRowValue :(int32_t)gapColumnType :(float)gapColumnValue :(float)aspectRatio :(CMasonNonRepeatedTrackSizingFunctionArray * _Nonnull)gridAutoRows :(CMasonNonRepeatedTrackSizingFunctionArray * _Nonnull)gridAutoColumns :(int32_t)gridAutoFlow :(int32_t)gridColumnStartType :(int16_t)gridColumnStartValue :(int32_t)gridColumnEndType :(int16_t)gridColumnEndValue :(int32_t)gridRowStartType :(int16_t)gridRowStartValue :(int32_t)gridRowEndType :(int16_t)gridRowEndValue :(CMasonTrackSizingFunctionArray * _Nonnull)gridTemplateRows :(CMasonTrackSizingFunctionArray * _Nonnull)gridTemplateColumns :(int32_t)overflowX :(int32_t)overflowY scrollBarWidth:(float)scrollBarWidth;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum Position : NSInteger;
enum Overflow : NSInteger;
@class MinMax;
@class TrackSizingFunction;

SWIFT_CLASS_NAMED("MasonStyle")
@interface MasonStyle : NSObject
@property (nonatomic, readonly) void * _Nullable nativePtr;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic) enum Display display;
@property (nonatomic) enum Position position;
@property (nonatomic) enum Direction direction;
@property (nonatomic) enum FlexDirection flexDirection;
@property (nonatomic) enum FlexWrap flexWrap;
@property (nonatomic) enum Overflow overflow;
@property (nonatomic) enum Overflow overflowX;
@property (nonatomic) enum Overflow overflowY;
@property (nonatomic) enum AlignItems alignItems;
@property (nonatomic) enum AlignSelf alignSelf;
@property (nonatomic) enum AlignContent alignContent;
@property (nonatomic) enum JustifyItems justifyItems;
@property (nonatomic) enum JustifySelf justifySelf;
@property (nonatomic) enum JustifyContent justifyContent;
@property (nonatomic, strong) MasonLengthPercentageAutoRectCompat * _Nonnull insetCompat;
- (void)setInsetLeft:(float)value :(NSInteger)type;
- (void)setInsetRight:(float)value :(NSInteger)type;
- (void)setInsetTop:(float)value :(NSInteger)type;
- (void)setInsetBottom:(float)value :(NSInteger)type;
- (void)setInsetWithValueType:(float)value :(NSInteger)type;
@property (nonatomic, strong) MasonLengthPercentageAutoRectCompat * _Nonnull marginCompat;
- (void)setMarginLeft:(float)value :(NSInteger)type;
- (void)setMarginRight:(float)value :(NSInteger)type;
- (void)setMarginTop:(float)value :(NSInteger)type;
- (void)setMarginBottom:(float)value :(NSInteger)type;
- (void)setMarginWithValueType:(float)value :(NSInteger)type;
@property (nonatomic, strong) MasonLengthPercentageRectCompat * _Nonnull paddingCompat;
- (void)setPaddingLeft:(float)value :(NSInteger)type;
- (void)setPaddingRight:(float)value :(NSInteger)type;
- (void)setPaddingTop:(float)value :(NSInteger)type;
- (void)setPaddingBottom:(float)value :(NSInteger)type;
- (void)setPaddingWithValueType:(float)value :(NSInteger)type;
@property (nonatomic, strong) MasonLengthPercentageRectCompat * _Nonnull borderCompat;
- (void)setBorderLeft:(float)value :(NSInteger)type;
- (void)setBorderRight:(float)value :(NSInteger)type;
- (void)setBorderTop:(float)value :(NSInteger)type;
- (void)setBorderBottom:(float)value :(NSInteger)type;
- (void)setBorderWithValueType:(float)value :(NSInteger)type;
@property (nonatomic) float flexGrow;
@property (nonatomic) float flexShrink;
- (void)setFlexBasis:(float)value :(NSInteger)type;
- (void)setScrollBarWidth:(float)value;
@property (nonatomic, strong) MasonDimensionSizeCompat * _Nonnull minSizeCompat;
- (void)setMinSizeWidth:(float)value :(NSInteger)type;
- (void)setMinSizeHeight:(float)value :(NSInteger)type;
- (void)setMinSizeWidthHeight:(float)value :(NSInteger)type;
@property (nonatomic, strong) MasonDimensionSizeCompat * _Nonnull sizeCompat;
@property (nonatomic, strong) MasonDimensionCompat * _Nonnull sizeCompatWidth;
@property (nonatomic, strong) MasonDimensionCompat * _Nonnull sizeCompatHeight;
- (void)setSizeWidth:(float)value :(NSInteger)type;
- (void)setSizeHeight:(float)value :(NSInteger)type;
- (void)setSizeWidthHeight:(float)value :(NSInteger)type;
@property (nonatomic, strong) MasonDimensionSizeCompat * _Nonnull maxSizeCompat;
- (void)setMaxSizeWidth:(float)value :(NSInteger)type;
- (void)setMaxSizeHeight:(float)value :(NSInteger)type;
- (void)setMaxSizeWidthHeight:(float)value :(NSInteger)type;
@property (nonatomic, strong) MasonLengthPercentageSizeCompat * _Nonnull gapCompat;
- (void)setGapRow:(float)value :(NSInteger)type;
- (void)setGapColumn:(float)value :(NSInteger)type;
- (void)setRowGap:(float)value :(NSInteger)type;
- (void)setColumnGap:(float)value :(NSInteger)type;
@property (nonatomic, copy) NSArray<MinMax *> * _Nonnull gridAutoRows;
@property (nonatomic, copy) NSArray<MinMax *> * _Nonnull gridAutoColumns;
@property (nonatomic) enum FlexGridAutoFlowWrap gridAutoFlow;
@property (nonatomic, strong) LineGridPlacementCompat * _Nonnull gridColumnCompat;
@property (nonatomic, strong) GridPlacementCompat * _Nonnull gridColumnStartCompat;
@property (nonatomic, strong) GridPlacementCompat * _Nonnull gridColumnEndCompat;
@property (nonatomic, strong) LineGridPlacementCompat * _Nonnull gridRowCompat;
@property (nonatomic, strong) GridPlacementCompat * _Nonnull gridRowStartCompat;
@property (nonatomic, strong) GridPlacementCompat * _Nonnull gridRowEndCompat;
@property (nonatomic, copy) NSArray<TrackSizingFunction *> * _Nonnull gridTemplateRows;
@property (nonatomic, copy) NSArray<TrackSizingFunction *> * _Nonnull gridTemplateColumns;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


SWIFT_CLASS_NAMED("MaxSizing")
@interface MaxSizing : NSObject
@property (nonatomic, readonly) float value;
+ (MaxSizing * _Nonnull)Points:(float)points SWIFT_WARN_UNUSED_RESULT;
+ (MaxSizing * _Nonnull)Percent:(float)percent SWIFT_WARN_UNUSED_RESULT;
+ (MaxSizing * _Nonnull)FitContent:(float)fit SWIFT_WARN_UNUSED_RESULT;
+ (MaxSizing * _Nonnull)FitContentPercent:(float)fit SWIFT_WARN_UNUSED_RESULT;
+ (MaxSizing * _Nonnull)Fraction:(float)flex SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MaxSizing * _Nonnull Auto;)
+ (MaxSizing * _Nonnull)Auto SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MaxSizing * _Nonnull MinContent;)
+ (MaxSizing * _Nonnull)MinContent SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MaxSizing * _Nonnull MaxContent;)
+ (MaxSizing * _Nonnull)MaxContent SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nonnull cssValue;
@property (nonatomic, readonly, copy) NSString * _Nullable jsonValue;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("MeasureOutput")
@interface MeasureOutput : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class MinSizing;

SWIFT_CLASS_NAMED("MinMax")
@interface MinMax : NSObject
- (nonnull instancetype)init:(MinSizing * _Nonnull)min :(MaxSizing * _Nonnull)max OBJC_DESIGNATED_INITIALIZER;
+ (MinMax * _Nonnull)PointsWithPoints:(float)points SWIFT_WARN_UNUSED_RESULT;
+ (MinMax * _Nonnull)PercentWithPercent:(float)percent SWIFT_WARN_UNUSED_RESULT;
+ (MinMax * _Nonnull)FlexWithFlex:(float)flex SWIFT_WARN_UNUSED_RESULT;
+ (MinMax * _Nonnull)FitContentWithFit:(float)fit SWIFT_WARN_UNUSED_RESULT;
+ (MinMax * _Nonnull)FitContentPercentWithFit:(float)fit SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MinMax * _Nonnull Auto;)
+ (MinMax * _Nonnull)Auto SWIFT_WARN_UNUSED_RESULT;
+ (MinMax * _Nullable)fromTypeValue:(NSInteger)minType :(float)minValue :(NSInteger)maxType :(float)maxValue SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nonnull cssValue;
@property (nonatomic, readonly, copy) NSString * _Nullable jsonValue;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("MinSizing")
@interface MinSizing : NSObject
@property (nonatomic, readonly) float value;
+ (MinSizing * _Nonnull)Points:(float)points SWIFT_WARN_UNUSED_RESULT;
+ (MinSizing * _Nonnull)Percent:(float)percent SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MinSizing * _Nonnull Auto;)
+ (MinSizing * _Nonnull)Auto SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MinSizing * _Nonnull MinContent;)
+ (MinSizing * _Nonnull)MinContent SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MinSizing * _Nonnull MaxContent;)
+ (MinSizing * _Nonnull)MaxContent SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nonnull cssValue;
@property (nonatomic, readonly, copy) NSString * _Nullable jsonValue;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("NSCMason")
@interface NSCMason : NSObject
@property (nonatomic, readonly) void * _Nullable nativePtr;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)clear;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NSCMason * _Nonnull instance;)
+ (NSCMason * _Nonnull)instance SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL shared;)
+ (BOOL)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(BOOL)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL alwaysEnable;)
+ (BOOL)alwaysEnable SWIFT_WARN_UNUSED_RESULT;
+ (void)setAlwaysEnable:(BOOL)value;
@end

typedef SWIFT_ENUM_NAMED(NSInteger, Overflow, "Overflow", open) {
  OverflowUnset = 0,
  OverflowVisible = 1,
  OverflowHidden = 2,
  OverflowScroll = 3,
};

typedef SWIFT_ENUM_NAMED(NSInteger, Position, "Position", open) {
  PositionRelative = 0,
  PositionAbsolute = 1,
};


SWIFT_CLASS_NAMED("TrackSizingFunction")
@interface TrackSizingFunction : NSObject
@property (nonatomic, readonly) BOOL isRepeating;
@property (nonatomic, readonly) id _Nullable value;
+ (TrackSizingFunction * _Nonnull)Single:(MinMax * _Nonnull)value SWIFT_WARN_UNUSED_RESULT;
+ (TrackSizingFunction * _Nonnull)AutoRepeat:(GridTrackRepetition * _Nonnull)gridTrackRepetition :(NSArray<MinMax *> * _Nonnull)value SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface UIView (SWIFT_EXTENSION(Mason))
@property (nonatomic, readonly, strong) UIView * _Nullable rootView;
+ (UIView * _Nonnull)createGridView SWIFT_WARN_UNUSED_RESULT;
+ (UIView * _Nonnull)createFlexView SWIFT_WARN_UNUSED_RESULT;
+ (UIView * _Nonnull)createBlockView SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, strong) MasonNode * _Nonnull mason;
@property (nonatomic, readonly) int64_t masonPtr;
@property (nonatomic, readonly) int64_t masonNodePtr;
@property (nonatomic, readonly) int64_t masonStylePtr;
@property (nonatomic, readonly, copy) NSString * _Nonnull masonPtrs;
@property (nonatomic, readonly) BOOL isMasonEnabled;
@property (nonatomic, strong) MasonStyle * _Nonnull style;
- (void)addSubviews:(NSArray<UIView *> * _Nonnull)views;
- (void)addSubviews:(NSArray<UIView *> * _Nonnull)views at:(NSInteger)index;
- (void)configure:(SWIFT_NOESCAPE void (^ _Nonnull)(MasonNode * _Nonnull))block;
@property (nonatomic) BOOL inBatch;
@property (nonatomic) enum Display display;
@property (nonatomic) enum Position _position;
@property (nonatomic) enum Direction direction;
@property (nonatomic) enum FlexDirection flexDirection;
@property (nonatomic) enum FlexWrap flexWrap;
@property (nonatomic) enum Overflow overflow;
@property (nonatomic) enum Overflow overflowX;
@property (nonatomic) enum Overflow overflowY;
@property (nonatomic) enum AlignItems alignItems;
@property (nonatomic) enum AlignSelf alignSelf;
@property (nonatomic) enum AlignContent alignContent;
@property (nonatomic) enum JustifyItems justifyItems;
@property (nonatomic) enum JustifySelf justifySelf;
@property (nonatomic) enum JustifyContent justifyContent;
@property (nonatomic) float flexGrow;
@property (nonatomic) float flexShrink;
@property (nonatomic, strong) MasonDimensionCompat * _Nonnull scrollBarWidthCompat;
@property (nonatomic, strong) MasonDimensionCompat * _Nonnull flexBasisCompat;
@property (nonatomic) float aspectRatio;
@property (nonatomic, copy) NSArray<MinMax *> * _Nonnull gridAutoRows;
@property (nonatomic, copy) NSArray<MinMax *> * _Nonnull gridAutoColumns;
@property (nonatomic) enum FlexGridAutoFlowWrap gridAutoFlow;
@property (nonatomic, strong) LineGridPlacementCompat * _Nonnull gridColumnCompat;
@property (nonatomic, strong) GridPlacementCompat * _Nonnull gridColumnStartCompat;
@property (nonatomic, strong) GridPlacementCompat * _Nonnull gridColumnEndCompat;
@property (nonatomic, strong) LineGridPlacementCompat * _Nonnull gridRowCompat;
@property (nonatomic, strong) GridPlacementCompat * _Nonnull gridRowStartCompat;
@property (nonatomic, strong) GridPlacementCompat * _Nonnull gridRowEndCompat;
@property (nonatomic, copy) NSArray<TrackSizingFunction *> * _Nonnull gridTemplateRows;
@property (nonatomic, copy) NSArray<TrackSizingFunction *> * _Nonnull gridTemplateColumns;
- (void)setPadding:(float)left :(float)right :(float)top :(float)bottom;
- (MasonLengthPercentageRectCompat * _Nonnull)getPadding SWIFT_WARN_UNUSED_RESULT;
- (void)setPaddingLeft:(float)left :(NSInteger)type;
- (void)setPaddingRight:(float)right :(NSInteger)type;
- (void)setPaddingTop:(float)top :(NSInteger)type;
- (void)setPaddingBottom:(float)bottom :(NSInteger)type;
- (MasonLengthPercentageCompat * _Nonnull)getPaddingLeft SWIFT_WARN_UNUSED_RESULT;
- (MasonLengthPercentageCompat * _Nonnull)getPaddingRight SWIFT_WARN_UNUSED_RESULT;
- (MasonLengthPercentageCompat * _Nonnull)getPaddingTop SWIFT_WARN_UNUSED_RESULT;
- (MasonLengthPercentageCompat * _Nonnull)getPaddingBottom SWIFT_WARN_UNUSED_RESULT;
- (void)setBorder:(float)left :(float)top :(float)right :(float)bottom;
- (MasonLengthPercentageRectCompat * _Nonnull)getBorder SWIFT_WARN_UNUSED_RESULT;
- (void)setBorderLeft:(float)left :(NSInteger)type;
- (void)setBorderRight:(float)right :(NSInteger)type;
- (void)setBorderTop:(float)top :(NSInteger)type;
- (void)setBorderBottom:(float)bottom :(NSInteger)type;
- (MasonLengthPercentageCompat * _Nonnull)getBorderLeft SWIFT_WARN_UNUSED_RESULT;
- (MasonLengthPercentageCompat * _Nonnull)getBorderRight SWIFT_WARN_UNUSED_RESULT;
- (MasonLengthPercentageCompat * _Nonnull)getBorderBottom SWIFT_WARN_UNUSED_RESULT;
- (MasonLengthPercentageCompat * _Nonnull)getBorderTop SWIFT_WARN_UNUSED_RESULT;
- (void)setMargin:(float)left :(float)top :(float)right :(float)bottom;
- (MasonLengthPercentageAutoRectCompat * _Nonnull)getMargin SWIFT_WARN_UNUSED_RESULT;
- (void)setMarginLeft:(float)left :(NSInteger)type;
- (void)setMarginRight:(float)right :(NSInteger)type;
- (void)setMarginTop:(float)top :(NSInteger)type;
- (void)setMarginBottom:(float)bottom :(NSInteger)type;
- (MasonLengthPercentageAutoCompat * _Nonnull)getMarginLeft SWIFT_WARN_UNUSED_RESULT;
- (MasonLengthPercentageAutoCompat * _Nonnull)getMarginRight SWIFT_WARN_UNUSED_RESULT;
- (MasonLengthPercentageAutoCompat * _Nonnull)getMarginTop SWIFT_WARN_UNUSED_RESULT;
- (MasonLengthPercentageAutoCompat * _Nonnull)getMarginBottom SWIFT_WARN_UNUSED_RESULT;
- (void)setInset:(float)left :(float)top :(float)right :(float)bottom;
- (MasonLengthPercentageAutoRectCompat * _Nonnull)getInset SWIFT_WARN_UNUSED_RESULT;
- (void)setInsetLeft:(float)left :(NSInteger)type;
- (void)setInsetRight:(float)right :(NSInteger)type;
- (void)setInsetTop:(float)top :(NSInteger)type;
- (void)setInsetBottom:(float)bottom :(NSInteger)type;
- (MasonLengthPercentageAutoCompat * _Nonnull)getInsetLeft SWIFT_WARN_UNUSED_RESULT;
- (MasonLengthPercentageAutoCompat * _Nonnull)getInsetRight SWIFT_WARN_UNUSED_RESULT;
- (MasonLengthPercentageAutoCompat * _Nonnull)getInsetTop SWIFT_WARN_UNUSED_RESULT;
- (MasonLengthPercentageAutoCompat * _Nonnull)getInsetBottom SWIFT_WARN_UNUSED_RESULT;
- (void)setMinSize:(float)width :(float)height;
- (MasonDimensionSizeCompat * _Nonnull)getMinSize SWIFT_WARN_UNUSED_RESULT;
- (void)setMinSizeWidth:(float)width :(NSInteger)type;
- (void)setMinSizeHeight:(float)height :(NSInteger)type;
- (MasonDimensionCompat * _Nonnull)getMinSizeWidth SWIFT_WARN_UNUSED_RESULT;
- (MasonDimensionCompat * _Nonnull)getMinSizeHeight SWIFT_WARN_UNUSED_RESULT;
- (void)setSize:(float)width :(float)height;
- (void)setSizeWidth:(float)width :(NSInteger)type;
- (void)setSizeHeight:(float)height :(NSInteger)type;
- (MasonDimensionSizeCompat * _Nonnull)getSize SWIFT_WARN_UNUSED_RESULT;
- (MasonDimensionCompat * _Nonnull)getSizeWidth SWIFT_WARN_UNUSED_RESULT;
- (MasonDimensionCompat * _Nonnull)getSizeHeight SWIFT_WARN_UNUSED_RESULT;
- (void)setMaxSize:(float)width :(float)height;
- (MasonDimensionSizeCompat * _Nonnull)getMaxSize SWIFT_WARN_UNUSED_RESULT;
- (void)setMaxSizeWidth:(float)width :(NSInteger)type;
- (void)setMaxSizeHeight:(float)height :(NSInteger)type;
- (MasonDimensionCompat * _Nonnull)getMaxSizeWidth SWIFT_WARN_UNUSED_RESULT;
- (MasonDimensionCompat * _Nonnull)getMaxSizeHeight SWIFT_WARN_UNUSED_RESULT;
- (void)setGap:(float)width :(float)height;
- (void)setGapWithWidthHeightType:(float)width :(NSInteger)width_type :(float)height :(NSInteger)height_type;
- (MasonLengthPercentageSizeCompat * _Nonnull)getGap SWIFT_WARN_UNUSED_RESULT;
- (void)setRowGap:(float)row :(NSInteger)type;
- (void)setColumnGap:(float)column :(NSInteger)type;
- (MasonLengthPercentageCompat * _Nonnull)getRowGap SWIFT_WARN_UNUSED_RESULT;
- (MasonLengthPercentageCompat * _Nonnull)getColumnGap SWIFT_WARN_UNUSED_RESULT;
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
